Program CalculateFactorial;

KAMUS
  num : integer;      // Input number
  i : integer;        // Loop counter
  fact : integer;     // Factorial result

  // Function to calculate factorial
  function FactorialRecursive(n : integer) -> integer;

ALGORITMA
  output("Enter a non-negative integer:", INLINE)
  input(num);

  if (num < 0) then
    output("Factorial is not defined for negative numbers.");
  else
    // Using the recursive function
    fact <- FactorialRecursive(num);
    output("Factorial of ", num, " (recursive) is: ", fact);

    // Iterative calculation for comparison (optional, but good example)
    if (num = 0) then
        fact <- 1;
    else
        fact <- 1;
        for i <- 1 to num do
            fact <- fact * i;
        endfor
    endif
    output("Factorial of ", num, " (iterative) is: ", fact);
  endif

function FactorialRecursive(n : integer) -> integer
KAMUS LOKAL
  // No local variables needed for this simple recursion base case
ALGORITMA
  if (n = 0) then
    -> 1; // Return 1 for factorial(0)
  else
    -> n * FactorialRecursive(n-1); // Recursive step
  endif
