Program TestAdvancedFeatures

KAMUS
    // Enum Definition
    type Days: (MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY)

    // Constant Declarations
    constant PI = 3.14159
    constant SITE_NAME = "NotalTranspiler" // String literal without spaces for simplicity
    constant IS_FEATURE_ENABLED = true
    constant DEFAULT_DAY = MONDAY // Enum value used as a constant

    today : Days
    counter : integer
    message : string

    // Record and Pointer Declaration
    type UserRecord: <id: integer, name: string>
    user1 : UserRecord
    pUser : pointer to UserRecord

    // Procedure Prototypes
    procedure PrintDay(d: Days);
    procedure InitGlobals;      // Parameterless procedure
    procedure ShowUser;

ALGORITMA
    InitGlobals; // Call parameterless procedure
    counter <- 0; message <- "default_msg" // Multi-assignment line at start of ALGORITMA

    today <- WEDNESDAY
    PrintDay(today)
    PrintDay(DEFAULT_DAY)

    if today = DEFAULT_DAY then
        output("It is indeed the default day!")

    output("Value of PI: ", PI)
    output("Website Name: ", SITE_NAME)
    output("Is Feature Enabled (true=1, false=0): ", IS_FEATURE_ENABLED)

    // Pointer and ^. access test
    user1.id <- 1
    user1.name <- "Alice" // Assume strings are handled (e.g. char*)
    pUser <- reference(user1)

    ShowUser // Call parameterless procedure that uses pUser

    // Example of modifying struct member via pointer dereference
    // dereference(pUser).id <- 2
    // output("User ID updated via dereference to: ", dereference(pUser).id)
    // For simplicity in this example, primary focus on ^. for read access.

END. // Program terminator

procedure InitGlobals
ALGORITMA
    output("--- InitGlobals called (parameterless procedure) ---")

procedure PrintDay(d: Days) // Procedure with enum parameter
ALGORITMA
    output("PrintDay received: ", INLINE)
    depend on (d)
        case MONDAY: output("Monday")
        case TUESDAY: output("Tuesday")
        case WEDNESDAY: output("Wednesday")
        case THURSDAY: output("Thursday")
        case FRIDAY: output("Friday")
        case SATURDAY: output("Saturday")
        case SUNDAY: output("Sunday")
        otherwise: output("Unknown Day!")
    // depend on ends with dedent

procedure ShowUser // Parameterless procedure using global pUser
ALGORITMA
    output("--- ShowUser called ---")
    if pUser = NULL then // Assumes NULL keyword is implemented
        output("pUser is NULL.")
    else
        // Read access using ^.
        output("User ID (via ^.): ", pUser^.id, INLINE)
        output(", User Name (via ^.): ", pUser^.name)
        // Read access using dereference()
        output("User ID (via dereference().): ", dereference(pUser).id, INLINE)
        output(", User Name (via dereference().): ", dereference(pUser).name)
    // if block ends with dedent
// procedure block ends with dedent
